// Code generated by protoc-gen-go. DO NOT EDIT.
// source: elastico.proto

package elastico

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IDProof is a proof for identity.
type IDProof struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	PK                   []byte   `protobuf:"bytes,2,opt,name=PK,proto3" json:"PK,omitempty"`
	Nonce                []byte   `protobuf:"bytes,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDProof) Reset()         { *m = IDProof{} }
func (m *IDProof) String() string { return proto.CompactTextString(m) }
func (*IDProof) ProtoMessage()    {}
func (*IDProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_elastico_a1cf916673ca6139, []int{0}
}
func (m *IDProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDProof.Unmarshal(m, b)
}
func (m *IDProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDProof.Marshal(b, m, deterministic)
}
func (dst *IDProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDProof.Merge(dst, src)
}
func (m *IDProof) XXX_Size() int {
	return xxx_messageInfo_IDProof.Size(m)
}
func (m *IDProof) XXX_DiscardUnknown() {
	xxx_messageInfo_IDProof.DiscardUnknown(m)
}

var xxx_messageInfo_IDProof proto.InternalMessageInfo

func (m *IDProof) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *IDProof) GetPK() []byte {
	if m != nil {
		return m.PK
	}
	return nil
}

func (m *IDProof) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func init() {
	proto.RegisterType((*IDProof)(nil), "elastico.IDProof")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SetupServiceClient is the client API for SetupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SetupServiceClient interface {
	ReceiveIDProof(ctx context.Context, in *IDProof, opts ...grpc.CallOption) (*empty.Empty, error)
}

type setupServiceClient struct {
	cc *grpc.ClientConn
}

func NewSetupServiceClient(cc *grpc.ClientConn) SetupServiceClient {
	return &setupServiceClient{cc}
}

func (c *setupServiceClient) ReceiveIDProof(ctx context.Context, in *IDProof, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/elastico.SetupService/ReceiveIDProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SetupServiceServer is the server API for SetupService service.
type SetupServiceServer interface {
	ReceiveIDProof(context.Context, *IDProof) (*empty.Empty, error)
}

func RegisterSetupServiceServer(s *grpc.Server, srv SetupServiceServer) {
	s.RegisterService(&_SetupService_serviceDesc, srv)
}

func _SetupService_ReceiveIDProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDProof)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetupServiceServer).ReceiveIDProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elastico.SetupService/ReceiveIDProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetupServiceServer).ReceiveIDProof(ctx, req.(*IDProof))
	}
	return interceptor(ctx, in, info, handler)
}

var _SetupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "elastico.SetupService",
	HandlerType: (*SetupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceiveIDProof",
			Handler:    _SetupService_ReceiveIDProof_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "elastico.proto",
}

func init() { proto.RegisterFile("elastico.proto", fileDescriptor_elastico_a1cf916673ca6139) }

var fileDescriptor_elastico_a1cf916673ca6139 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcd, 0x49, 0x2c,
	0x2e, 0xc9, 0x4c, 0xce, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0xa4,
	0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xe2, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05,
	0x25, 0x95, 0x10, 0x65, 0x4a, 0xce, 0x5c, 0xec, 0x9e, 0x2e, 0x01, 0x45, 0xf9, 0xf9, 0x69, 0x42,
	0x42, 0x5c, 0x2c, 0x8e, 0x29, 0x29, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6,
	0x10, 0x1f, 0x17, 0x53, 0x80, 0xb7, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x53, 0x80, 0xb7,
	0x90, 0x08, 0x17, 0xab, 0x5f, 0x7e, 0x5e, 0x72, 0xaa, 0x04, 0x33, 0x58, 0x08, 0xc2, 0x31, 0xf2,
	0xe6, 0xe2, 0x09, 0x4e, 0x2d, 0x29, 0x2d, 0x08, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2,
	0xe6, 0xe2, 0x0b, 0x4a, 0x4d, 0x4e, 0xcd, 0x2c, 0x4b, 0x85, 0x99, 0x2d, 0xa8, 0x07, 0x77, 0x1e,
	0x54, 0x48, 0x4a, 0x4c, 0x0f, 0xe2, 0x2e, 0x3d, 0x98, 0xbb, 0xf4, 0x5c, 0x41, 0xee, 0x4a, 0x62,
	0x03, 0xf3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0x74, 0xf5, 0xab, 0xd1, 0x00, 0x00,
	0x00,
}
